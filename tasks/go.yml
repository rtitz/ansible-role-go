---

# Download 
- name: Download Go (for x86_64)
  ansible.builtin.get_url:
    url: "{{ go_url_x86_64 }}"
    dest: "{{ go_download_dir }}/"
  when: ansible_architecture == 'x86_64'
  register: download_go1

- name: Download Go (for i386)
  ansible.builtin.get_url:
    url: "{{ go_url_i386 }}"
    dest: "{{ go_download_dir }}/"
  when: ansible_architecture == 'i386'
  register: download_go2

- name: Download Go (for aarch64)
  ansible.builtin.get_url:
    url: "{{ go_url_aarch64 }}"
    dest: "{{ go_download_dir }}/"
  when: ansible_architecture == 'aarch64'
  register: download_go3

- name: Download Go (for armv7l)
  ansible.builtin.get_url:
    url: "{{ go_url_armv7l }}"
    dest: "{{ go_download_dir }}/"
  when: ansible_architecture == 'armv7l'
  register: download_go4

- name: Download Go (for armv6l)
  ansible.builtin.get_url:
    url: "{{ go_url_armv6l }}"
    dest: "{{ go_download_dir }}/"
  when: ansible_architecture == 'armv6l'
  register: download_go5

# Extract and set path
- name: Extracting Go
  ansible.builtin.shell:
    cmd: rm -rf /usr/local/go && tar -C /usr/local -xzf {{ go_download_dir }}/{{ go_version }}*.tar.gz
  changed_when: false
  become: true
  when: (download_go1.changed) or (download_go2.changed) or (download_go3.changed) or (download_go4.changed) or (download_go5.changed)

- name: Add Go bin directory to system-wide $PATH
  ansible.builtin.copy:
    dest: /etc/profile.d/go-path.sh
    content: 'PATH=$PATH:/usr/local/go/bin'
    mode: '0755'
    owner: "root"
    group: "root"
  become: true

- name: Cleanup (Remove Go installation package)
  ansible.builtin.shell:
    cmd: rm -f {{ go_download_dir }}/{{ go_version }}*.tar.gz
  when: cleanup_go_installer
  